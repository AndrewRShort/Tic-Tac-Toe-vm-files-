function UIBoard.init 0
push constant 512
pop static 0
push constant 256
pop static 1
push constant 4
pop static 2
push constant 0
return
function UIBoard.final 0
push constant 0
return
function UIBoard.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 4
push constant 240
pop this 0
push this 0
push constant 5
call Math.divide 2
pop this 1
push static 0
push this 0
sub
push constant 15
sub
pop this 2
push static 1
push constant 2
call Math.divide 2
push this 0
push constant 2
call Math.divide 2
sub
pop this 3
push pointer 0
return
function UIBoard.getMoveCount 0
push argument 0
pop pointer 0
push this 4
return
function UIBoard.resetMoveCount 0
push argument 0
pop pointer 0
push constant 0
pop this 4
push constant 0
return
function UIBoard.drawBoard 3
push argument 0
pop pointer 0
push this 0
push constant 3
call Math.divide 2
pop local 0
push local 0
push local 0
add
pop local 1
push static 2
push constant 2
call Math.divide 2
pop local 2
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 2
push local 0
add
push local 2
sub
push this 3
push this 2
push local 0
add
push local 2
add
push this 3
push this 0
add
call Screen.drawRectangle 4
pop temp 0
push this 2
push local 1
add
push local 2
sub
push this 3
push this 2
push local 1
add
push local 2
add
push this 3
push this 0
add
call Screen.drawRectangle 4
pop temp 0
push this 2
push this 3
push local 0
add
push local 2
sub
push this 2
push this 0
add
push this 3
push local 0
add
push local 2
add
call Screen.drawRectangle 4
pop temp 0
push this 2
push this 3
push local 1
add
push local 2
sub
push this 2
push this 0
add
push this 3
push local 1
add
push local 2
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function UIBoard.doUIMove 7
push argument 0
pop pointer 0
push this 4
push constant 1
add
pop this 4
call Board.getWinPositions 0
pop local 6
push this 0
push constant 6
call Math.divide 2
pop local 2
push this 0
push constant 2
call Math.divide 2
pop local 3
push this 0
push local 2
sub
pop local 4
push this 1
push constant 2
call Math.divide 2
pop local 5
push constant 3
push local 6
add
pop pointer 1
push that 0
push argument 1
and
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push local 2
add
pop local 0
goto IF_END0
label IF_FALSE0
push constant 4
push local 6
add
pop pointer 1
push that 0
push argument 1
and
push argument 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
push local 3
add
pop local 0
goto IF_END1
label IF_FALSE1
push this 2
push local 4
add
pop local 0
label IF_END1
label IF_END0
push constant 0
push local 6
add
pop pointer 1
push that 0
push argument 1
and
push argument 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push local 2
add
pop local 1
goto IF_END2
label IF_FALSE2
push constant 1
push local 6
add
pop pointer 1
push that 0
push argument 1
and
push argument 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push local 3
add
pop local 1
goto IF_END3
label IF_FALSE3
push this 3
push local 4
add
pop local 1
label IF_END3
label IF_END2
push argument 2
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push local 5
sub
push local 1
push local 5
sub
push local 0
push local 5
add
push local 1
push local 5
add
call Screen.drawLine 4
pop temp 0
push local 0
push local 5
sub
push constant 1
sub
push local 1
push local 5
sub
push local 0
push local 5
add
push constant 1
sub
push local 1
push local 5
add
call Screen.drawLine 4
pop temp 0
push local 0
push local 5
sub
push constant 1
add
push local 1
push local 5
sub
push local 0
push local 5
add
push constant 1
add
push local 1
push local 5
add
call Screen.drawLine 4
pop temp 0
push local 0
push local 5
add
push local 1
push local 5
sub
push local 0
push local 5
sub
push local 1
push local 5
add
call Screen.drawLine 4
pop temp 0
push local 0
push local 5
add
push constant 1
sub
push local 1
push local 5
sub
push local 0
push local 5
sub
push constant 1
sub
push local 1
push local 5
add
call Screen.drawLine 4
pop temp 0
push local 0
push local 5
add
push constant 1
add
push local 1
push local 5
sub
push local 0
push local 5
sub
push constant 1
add
push local 1
push local 5
add
call Screen.drawLine 4
pop temp 0
goto IF_END4
label IF_FALSE4
push local 0
push local 1
push local 5
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push local 5
push constant 3
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
label IF_END4
push constant 0
return
function UIBoard.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
